# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # Hyper-V: Use the hashicorp image that supports more providers
  config.vm.box = "hashicorp/bionic64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  #config.vm.network "forwarded_port", guest: 15672, host: 15672    # RabbitMQ web console.
  #config.vm.network "forwarded_port", guest: 5672, host: 5672      # AMQP
  #config.vm.network "forwarded_port", guest: 3000, host: 3000      # RocketChat
  #config.vm.network "forwarded_port", guest: 5984, host: 5984      # CouchDB
  #config.vm.network "forwarded_port", guest: 2376, host: 2376      # Docker remote API
  #config.vm.network "forwarded_port", guest: 9999, host: 9999      # LASAGNE Web Socket

  config.vm.network "forwarded_port", guest: 31080, host: 31080
  config.vm.network "forwarded_port", guest: 30200, host: 30200
  config.vm.network "forwarded_port", guest: 31443, host: 31443
  config.vm.network "forwarded_port", guest: 32000, host: 32000
  config.vm.network "forwarded_port", guest: 16443, host: 16443
  for i in 30000..30150
      config.vm.network :forwarded_port, guest: i, host: i
  end

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.

  # Hyper-V: Can't set the IP address, assigned IP needs to be set in texas-chart/values/vagrant.yml
  #config.vm.network "private_network", ip: "192.168.33.11"

  # Hyper-V: Can't use the disksize plugin
  #config.disksize.size = '40GB'

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
    vb.memory = "4096"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.
  config.vm.provider "hyperv" do |hv|
    hv.memory = "4096"
  end

  # SYNC the texas deploy software to the VM
  # Hyper-V: Folder sync permission are difficult to get right, just re-clone the repo internally
  #config.vm.synced_folder ".", "/home/vagrant/texas.deploy"

  # Install docker.
  config.vm.provision "shell", inline: "snap install docker"

  # Install microk8s.
  config.vm.provision "shell", inline: "snap install microk8s --classic"

  # Create a local docker repository
  config.vm.provision "shell", inline: "docker run -d -p 32000:5000 --restart=always --name registry registry:2"

  # Ensure scripts are unix line endings.
  # Hyper-V: Not sharing, don't do this
  # config.vm.provision "shell", inline: "apt-get update; apt-get install dos2unix; cd /home/vagrant/texas.deploy; find ./ -type f -iname \"*.sh\" -exec dos2unix -k -s -o {} ';'"

  # And build the containers.
  # Hyper-V: Sorry, have to do this manually
  #config.vm.provision "shell", inline: "cd /home/vagrant/texas.deploy; find ./ -type f -iname \"*.sh\" -exec chmod +x {} \\; ; ./deploy.sh"
end
